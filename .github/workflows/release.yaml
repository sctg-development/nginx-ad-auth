name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [windows, linux, darwin]
        goarch: [386, amd64, arm64]
        exclude:
          - goos: darwin
            goarch: 386

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Build
        run: |
          mkdir -p build/${{ matrix.goos }}-${{ matrix.goarch }}
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o nginx-ad-auth-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Attest release
        uses: actions/attest-build-provenance@v1
        with:
           subject-path: 'nginx-ad-auth-${{ matrix.goos }}-${{ matrix.goarch }}'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}
          path: nginx-ad-auth-${{ matrix.goos }}-${{ matrix.goarch }}

  create-release:
        needs: build
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        steps:
        - name: Get current date
          id: getdate
          run: echo "::set-output name=getdate::$(date +'%Y.%m.%d-%H%M')"
        
        - uses: actions/checkout@v4
        
        - name: Create Release with gh
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: gh release create v${{ steps.getdate.outputs.getdate }} -t "Release ${{ steps.getdate.outputs.getdate }}" -n "Release ${{ steps.getdate.outputs.getdate }}"

        - uses: actions/download-artifact@v4

        - name: Upload Release Assets
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            for artifact in nginx-ad-auth-*; do
                gh release upload v${{ steps.getdate.outputs.getdate }} $artifact/*
            done